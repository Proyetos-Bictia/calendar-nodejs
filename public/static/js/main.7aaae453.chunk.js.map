{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","helpers/calendar-messages.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","prepareEvents","events","map","end","moment","toDate","start","eventAddNewAction","eventClearActiveEventAction","eventUpdatedAction","eventDeletedAction","eventLoading","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModalAction","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","endDate","setEndDate","titleValid","setTitleValid","formvalues","setFormvalues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","diplay","color","components","onSelectSlot","selectable","onDoubleClickEvent","onSelectEvent","onView","view","PublicRoute","isAuthtenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"2PAGaA,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,WACVD,EAAUH,IAIRK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAACN,EAAQG,EAAmBD,I,yBCrBjCK,EAAUC,iDAEVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAK3BQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MCpCpBY,EACI,kBADJA,EAEK,mBAFLA,EAIO,qBAJPA,EAKI,sBALJA,EAQI,kBARJA,EASc,6BATdA,EAUK,uBAVLA,EAWK,wBAXLA,EAYI,wBAZJA,EAcW,qCAdXA,EAgBE,eAhBFA,EAmBG,gBC4BVC,EAAiB,iBAAO,CAAEC,KAAMF,IAEhCG,EAAQ,SAACC,GAAD,MAAW,CACrBF,KAAMF,EACNK,QAASD,IAUPE,EAAS,iBAAO,CAAEJ,KAAMF,ICrDjBO,EAAc,WAEvB,IAAMC,EAAWC,cAFY,EAIqBnC,EAAQ,CACtDoC,OAAQ,0BACRC,UAAW,WANc,mBAItBC,EAJsB,KAILC,EAJK,OAS2BvC,EAAQ,CAC5DwC,MAAO,WACPC,OAAQ,sBACRC,WAAY,SACZC,WAAY,WAba,mBAStBC,EATsB,KASFC,EATE,KAgBrBL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAE3BP,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAgBhB,OACI,yBAAKS,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,uCACA,0BAAMC,SAnBD,SAACC,GDvBA,IAACC,EAAOC,ECwB1BF,EAAEG,iBACFjB,GDzBmBe,ECyBCb,EDzBMc,ECyBEb,EDxBhC,uCAAO,WAAOH,GAAP,iBAAAkB,EAAA,sEACgBxC,EAAc,OAAQ,CAAEqC,QAAOC,YAAY,QAD3D,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEGnC,EAFH,QAGMoC,IACL/B,aAAagC,QAAQ,QAASrC,EAAKI,OACnCC,aAAagC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDxB,EAASL,EAAM,CAAE8B,IAAKxC,EAAKwC,IAAKnD,KAAMW,EAAKX,SAE3CoD,IAAKC,KAAK,QAAS1C,EAAK2C,IAAK,SAR9B,2CAAP,0DC0CoB,yBAAKhB,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,eACViB,YAAY,SACZvD,KAAK,SACLC,MAAO2B,EACP4B,SAAUzB,KAGlB,yBAAKO,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAU,eACViB,YAAY,gBACZvD,KAAK,YACLC,MAAO4B,EACP2B,SAAUzB,KAGlB,yBAAKO,UAAU,cACX,2BACIlB,KAAK,SACLkB,UAAU,YACVrC,MAAM,aAMtB,yBAAKqC,UAAU,yBACX,wCACA,0BAAMC,SA/CC,SAACC,GDdC,IAACC,EAAOC,EAAU1C,ECevCwC,EAAEG,iBACET,IAAeC,EACfiB,IAAKC,KAAK,QAAS,kCAAgC,SAEnD3B,GDnBkBe,ECmBKR,EDnBES,ECmBMR,EDnBIlC,ECmBQgC,EDlBnD,uCAAO,WAAON,GAAP,iBAAAkB,EAAA,sEACgBxC,EAAc,WAAY,CAAEJ,OAAMyC,QAAOC,YAAY,QADrE,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEGnC,EAFH,QAGMoC,IACL/B,aAAagC,QAAQ,QAASrC,EAAKI,OACnCC,aAAagC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDxB,EAASL,EAAM,CAAE8B,IAAKxC,EAAKwC,IAAKnD,KAAMW,EAAKX,SAE3CoD,IAAKC,KAAK,QAAS1C,EAAK2C,IAAK,SAR9B,2CAAP,0DC6DoB,yBAAKhB,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,eACViB,YAAY,SACZvD,KAAK,QACLC,MAAO+B,EACPwB,SAAUnB,KAGlB,yBAAKC,UAAU,cACX,2BACIlB,KAAK,QACLkB,UAAU,eACViB,YAAY,SACZvD,KAAK,SACLC,MAAOgC,EACPuB,SAAUnB,KAGlB,yBAAKC,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAU,eACViB,YAAY,gBACZvD,KAAK,aACLC,MAAOiC,EACPsB,SAAUnB,KAIlB,yBAAKC,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAU,eACViB,YAAY,0BACZvD,KAAK,aACLC,MAAOkC,EACPqB,SAAUnB,KAIlB,yBAAKC,UAAU,cACX,2BACIlB,KAAK,SACLkB,UAAU,YACVrC,MAAM,uB,yBC/HzBwD,G,MAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXNC,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GACnC,OAAOA,EAAOC,KACV,SAAClC,GAAD,mBAAC,eACMA,GADP,IAEImC,IAAKC,IAAOpC,EAAEmC,KAAKE,SACnBC,MAAOF,IAAOpC,EAAEsC,OAAOD,eCsB7BE,EAAoB,SAACX,GAAD,MAAY,CAClChD,KAAMF,EACNK,QAAS6C,IASAY,EAA8B,iBAAO,CAC9C5D,KAAMF,IAmBJ+D,EAAqB,SAACb,GAAD,MAAY,CACnChD,KAAMF,EACNK,QAAS6C,IAqBPc,EAAqB,iBAAO,CAC9B9D,KAAMF,IAmBJiE,EAAe,SAACV,GAAD,MAAa,CAC9BrD,KAAMF,EACNK,QAASkD,ICnGAW,EAAS,WAAO,IAEjBpF,EAASqF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCvF,KACF0B,EAAWC,cAOjB,OACI,yBAAKW,UAAU,mCACX,0BAAMA,UAAU,gBACXtC,GAAQ,YAEb,4BACIsC,UAAU,yBACVkD,QAZS,WACjB9D,GL2CG,SAACA,GACJV,aAAayE,QACb/D,EAASF,QK5CTE,ED+F+B,CACnCN,KAAMF,MCpFM,uBAAGoB,UAAU,wBACb,2CCxBHoD,EAAgB,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MACpBuB,EAAgBvB,EAAhBuB,MAAOrE,EAAS8C,EAAT9C,KACf,OACI,6BACI,gCAASqE,GADb,IAC6B,6BACzB,2BAAIrE,EAAKtB,Q,kCCLR4F,GAAoB,WAC7B,MAAO,CACHxE,KAAMF,ICMR2E,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAInBC,IAAMC,cAAc,SAEpB,IAAMC,GAAM3B,MAAS4B,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAG,SAE9BG,GAAY,CACdlB,MAAO,GACPmB,MAAO,GACPhC,MAAOyB,GAAI1B,SACXF,IAAKgC,GAAS9B,UAGLkC,GAAgB,WAAO,IAAD,EAEGrH,mBAAS6G,GAAI1B,UAFhB,mBAExBmC,EAFwB,KAEbC,EAFa,OAGDvH,mBAASiH,GAAS9B,UAHjB,mBAGxBqC,EAHwB,KAGfC,EAHe,OAIKzH,oBAAS,GAJd,mBAIxB0H,EAJwB,KAIZC,EAJY,OAKK3H,mBAASmH,IALd,mBAKxBS,EALwB,KAKZC,EALY,KAOzB7F,EAAWC,cAET6F,EAAcnC,aAAY,SAAAC,GAAK,OAAIA,EAAMmC,MAAzCD,UACAE,EAAgBrC,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,YAA3CD,YAEAZ,EAA6BQ,EAA7BR,MAAOnB,EAAsB2B,EAAtB3B,MAAOb,EAAewC,EAAfxC,MAAOH,EAAQ2C,EAAR3C,IAE7BiD,qBAAU,WAEFL,EADAG,GAGcb,MAEnB,CAACU,EAAeG,IAEnB,IAAM5H,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBwH,EAAc,2BACPD,GADM,kBAERvH,EAAOC,KAAOD,EAAOE,UAIxB4H,EAAa,WAEfnG,EDvDG,CACHN,KAAMF,ICuDNQ,EAASsD,KACTuC,EAAcV,KA8ClB,OACI,kBAAC,IAAD,CACIiB,OAAQN,EAERO,eAAgBF,EAChBG,MAAOnC,GACPoC,eAAgB,IAChB3F,UAAU,QACV4F,iBAAiB,eAEjB,gCAAOR,EAAe,gBAAkB,eAAxC,KACA,6BACA,0BACIpF,UAAU,YACVC,SAxCa,SAACC,GACtBA,EAAEG,iBACF,IAAMwF,EAAcvD,IAAOE,GACrBsD,EAAYxD,IAAOD,GAEzB,GAAIwD,EAAYE,cAAcD,GAC1BhF,IAAKC,KAAK,QAAS,gDAAiD,aADxE,CAKA,GAAIsC,EAAM2C,OAAOC,OAAS,EACtB,OAAOlB,GAAc,GJrDD,IAACjD,EIwDrBsD,GACAc,QAAQC,IAAInB,GACZ5F,GJ1DqB0C,EI0DKkD,EJzDlC,uCAAO,WAAO5F,GAAP,iBAAAkB,EAAA,+EAEoB9B,EAAc,UAAD,OAAWsD,EAAMsE,IAAMtE,EAAO,OAF/D,cAEOvB,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOnC,EAHP,QAIUoC,GACLrB,EAASuD,EAAmBb,IAE5BhB,IAAKC,KAAK,QAAS1C,EAAK2C,IAAK,SAPlC,kDAUCkF,QAAQC,IAAR,MAVD,0DAAP,yDI2DQ/G,EJlGoB,SAAC0C,GAC7B,8CAAO,WAAO1C,EAAUiH,GAAjB,uBAAA/F,EAAA,+DAEmB+F,IAAWpD,KAAzBpC,EAFL,EAEKA,IAAKnD,EAFV,EAEUA,KAFV,kBAKoBc,EAAc,SAAUsD,EAAO,QALnD,cAKOvB,EALP,gBAMoBA,EAAKC,OANzB,QAMOnC,EANP,QAQUoC,KACLqB,EAAMsE,GAAK/H,EAAKiI,OAAOF,GACvBtE,EAAM9C,KAAO,CACTuH,IAAK1F,EACLnD,QAEJ0B,EAASqD,EAAkBX,KAdhC,kDAiBChB,IAAKC,KAAK,QAAS,KAAMC,IAAK,SAjB/B,0DAAP,wDIiGiBwF,CAAiBxB,IAI9BD,GAAc,GACdQ,OAoBQ,yBAAKvF,UAAU,cACX,sDACA,kBAAC,IAAD,CACIkB,SA9DU,SAAChB,GAC3ByE,EAAazE,GACb+E,EAAc,2BACPD,GADM,IAETxC,MAAOtC,MA2DKvC,MAAO+G,EACP1E,UAAU,kBAKlB,yBAAKA,UAAU,cACX,mDACA,kBAAC,IAAD,CACIkB,SAhEQ,SAAChB,GACzB2E,EAAW3E,GACX+E,EAAc,2BACPD,GADM,IAET3C,IAAKnC,MA6DOvC,MAAOiH,EACP6B,QAAS/B,EACT1E,UAAU,kBAIlB,6BACA,yBAAKA,UAAU,cACX,iDACA,2BACIlB,KAAK,OACLkB,UAAS,wBAAmB8E,GAAc,cAC1C7D,YAAY,uBACZvD,KAAK,QACLgJ,aAAa,MACb/I,MAAO0F,EACPnC,SAAU1D,IAEd,2BAAO4I,GAAG,YAAYpG,UAAU,wBAAhC,6BAGJ,yBAAKA,UAAU,cACX,8BACIlB,KAAK,OACLkB,UAAU,eACViB,YAAY,QACZ0F,KAAK,IACLjJ,KAAK,QACLC,MAAO6G,EACPtD,SAAU1D,IAEd,2BAAO4I,GAAG,YAAYpG,UAAU,wBAAhC,6BAGJ,4BACIlB,KAAK,SACLkB,UAAU,qCAEV,uBAAGA,UAAU,gBACb,8CCjLP4G,GAAY,WAErB,IAAMxH,EAAWC,cAMjB,OACI,4BACIW,UAAU,sBACVkD,QAPgB,WACpB9D,EAASkE,QAQL,uBAAGtD,UAAU,kBCbZ6G,GAAiB,WAE1B,IAAMzH,EAAWC,cAMjB,OACI,4BACIW,UAAU,4BACVkD,QAPa,WACjB9D,ENwDJ,uCAAO,WAAOA,EAAUiH,GAAjB,mBAAA/F,EAAA,6DAEI8F,EAAMC,IAAWhB,SAASD,YAA1BgB,GAFJ,kBAIoB5H,EAAc,UAAD,OAAW4H,GAAM,GAAI,UAJtD,cAIO7F,EAJP,gBAKoBA,EAAKC,OALzB,QAKOnC,EALP,QAMUoC,GACLrB,EAASwD,KAET9B,IAAKC,KAAK,QAAS1C,EAAK2C,IAAK,SATlC,kDAYCkF,QAAQC,IAAR,MAZD,0DAAP,2DMhDQ,uBAAGnG,UAAU,iBACb,kD,OCFZsC,IAAOwE,OAAO,MACd,IAAMC,GAAYC,YAAgB1E,KAcrB2E,GAAiB,WAAO,IAAD,EAEA7J,mBAASsB,aAAaC,QAAQ,aAAe,SAF7C,mBAEzBuI,EAFyB,KAEfC,EAFe,KAG1B/H,EAAWC,cAHe,EAKA0D,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,YAAnDlD,EALwB,EAKxBA,OAAQiD,EALgB,EAKhBA,YACRvE,EAAQkC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCpC,IAERyE,qBAAU,WACNlG,EP+CJ,uCAAO,WAAOA,GAAP,mBAAAkB,EAAA,+EAEoB9B,EAAc,UAFlC,cAEO+B,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOnC,EAHP,QAIUoC,KACC0B,EAASD,EAAc7D,EAAK+I,SAElChI,EAASyD,EAAaV,KAP3B,kDAUC+D,QAAQC,IAAR,MAVD,0DAAP,yDO9CG,CAAC/G,IAgCJ,OACI,yBAAKY,UAAU,mBACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CACI+G,UAAWA,GACX5E,OAAQA,EACRkF,cAAc,QACdC,YAAY,MACZnG,SAAUA,EACVoG,gBAtBa,SAACzF,EAAOU,EAAOH,EAAKmF,GAQzC,MAAO,CACH9B,MARU,CACV+B,gBAAkB5G,IAAQiB,EAAM9C,KAAKuH,IAAO,UAAY,UACxDmB,aAAc,MACdC,QAAS,GACTC,OAAQ,QACRC,MAAO,WAiBHC,WAAY,CACRhG,MAAOsB,GAEX2E,aA9BS,SAAC7H,GAClBd,EAASsD,MA8BDsF,YAAY,EACZC,mBA7CU,SAAC/H,GACnBd,EAASkE,OA6CD4E,cA1CU,SAAChI,GACnBd,EPdwC,CAC5CN,KAAMF,EACNK,QOYkCiB,KA0CtBiI,OAvCS,SAACjI,GAClBiH,EAAYjH,GACZxB,aAAagC,QAAQ,WAAYR,IAsCzBkI,KAAMlB,IAGV,kBAAC,GAAD,MAGI9B,GACA,kBAAE,GAAF,MAGJ,kBAAC,GAAD,Q,SClGCiD,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,iBACWC,EAET,EAFFC,UACGC,EACD,iDACF,OACI,kBAAC,IAAD,iBACQA,EADR,CAEID,UAAW,SAACE,GAAD,OACLJ,EAEK,kBAAC,IAAD,CAAUK,GAAG,MADb,kBAACJ,EAAcG,QCVzBE,GAAe,SAAC,GAItB,IAHHN,EAGE,EAHFA,iBACWC,EAET,EAFFC,UACGC,EACD,iDACF,OACI,kBAAC,IAAD,iBACQA,EADR,CAEID,UAAW,SAACE,GAAD,OACNJ,EACK,kBAACC,EAAcG,GACf,kBAAC,IAAD,CAAUC,GAAG,gBCDtBE,GAAY,WAErB,IAAMzJ,EAAWC,cAFU,EAGD0D,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA7C6F,EAHmB,EAGnBA,SAAUjI,EAHS,EAGTA,IAMlB,OAJAyE,qBAAU,WACNlG,EdcJ,uCAAO,WAAOA,GAAP,iBAAAkB,EAAA,sEACgB9B,EAAc,cAD9B,cACG+B,EADH,gBAEgBA,EAAKC,OAFrB,QAEGnC,EAFH,QAGMoC,IACL/B,aAAagC,QAAQ,QAASrC,EAAKI,OACnCC,aAAagC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDxB,EAASL,EAAM,CAAE8B,IAAKxC,EAAKwC,IAAKnD,KAAMW,EAAKX,SAE3C0B,EAASP,KARV,2CAAP,yDcbG,CAACO,IAEA0J,EACQ,yCAIR,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CACIC,OAAK,EACLC,KAAK,SACLR,UAAWrJ,EACXmJ,mBAAoBzH,IAExB,kBAAC,GAAD,CACIkI,OAAK,EACLC,KAAK,IACLR,UAAWvB,GACXqB,mBAAoBzH,IAExB,kBAAC,IAAD,CAAU8H,GAAG,U,kBCzC3BxL,GAAe,CACjB+H,WAAW,G,SCYT/H,GAAe,CACjBgF,OAAQ,GACRiD,YAAa,MCfXjI,GAAe,CACjB2L,UAAU,GCEDG,GAAeC,aAAgB,CACxC/D,GHAqB,WAAmC,IAAlCnC,EAAiC,uDAAzB7F,GAAcgM,EAAW,uCACvD,OAAQA,EAAOrK,MACX,KAAKF,EACD,OAAO,2BACAoE,GADP,IAEIkC,WAAW,IAGnB,KAAKtG,EACD,OAAO,2BACAoE,GADP,IAEIkC,WAAW,IAGnB,QACI,OAAOlC,IGdfqC,SFa2B,WAAmC,IAAlCrC,EAAiC,uDAAzB7F,GAAcgM,EAAW,uCAC7D,OAAQA,EAAOrK,MACX,KAAKF,EACD,OAAO,2BACAoE,GADP,IAEIoC,YAAa+D,EAAOlK,UAG5B,KAAKL,EACD,OAAO,2BACAoE,GADP,IAEIb,OAAO,GAAD,oBAAMa,EAAMb,QAAZ,CAAoBgH,EAAOlK,YAGzC,KAAKL,EACD,OAAO,2BACAoE,GADP,IAEIoC,YAAa,OAGrB,KAAKxG,EACD,OAAO,2BACAoE,GADP,IAEIb,OAAQa,EAAMb,OAAOC,KACjB,SAAAlC,GAAC,OAAKA,EAAEkG,KAAO+C,EAAOlK,QAAQmH,GAAM+C,EAAOlK,QAAUiB,OAIjE,KAAKtB,EACD,OAAO,2BACAoE,GADP,IAEIb,OAAQa,EAAMb,OAAOiH,QACjB,SAAAlJ,GAAC,OAAKA,EAAEkG,KAAOpD,EAAMoC,YAAYgB,MAErChB,YAAa,OAGrB,KAAKxG,EACD,OAAO,2BACAoE,GADP,IAEIb,OAAO,aAAKgH,EAAOlK,WAG3B,KAAKL,EACD,MAAO,CACHuD,OAAQ,GACRiD,YAAa,MAGrB,QACI,OAAOpC,IE9DfC,KDAuB,WAAmC,IAAlCD,EAAiC,uDAAzB7F,GAAcgM,EAAW,uCACzD,OAAQA,EAAOrK,MAEX,KAAKF,EACD,OAAO,2BACAoE,GADP,IAEI8F,UAAU,GACPK,EAAOlK,SAGlB,KAAKL,EACD,OAAO,2BACAoE,GADP,IAEI8F,UAAU,IAGlB,KAAKlK,EACD,MAAO,CACHkK,UAAU,GAGlB,QACI,OAAO9F,MEzBbqG,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBT,GACAI,GACIM,aAAiBC,QCJZC,GAAc,WACvB,OACI,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,Q,OCHZK,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.7aaae453.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Purge state',\r\n\r\n    eventStartAddNew: '[event] Star add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event update',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({ uid: body.uid, name: body.name }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({ uid: body.uid, name: body.name }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({ uid: body.uid, name: body.name }))\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'camilo8davila@gmail.com',\r\n        lPassword: '123456',\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Hernando',\r\n        rEmail: 'herdavila@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            Swal.fire('Error', 'las contraseñas no coinciden', 'error')\r\n        } else {\r\n            dispatch(startRegister(rEmail, rPassword1, rName))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNewAction(event))\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Error', error.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNewAction = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventSetActiveAction = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEventAction = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdatedAction(event))\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdatedAction = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeletedAction())\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeletedAction = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                const events = prepareEvents(body.eventos);\r\n                // console.log(events);\r\n                dispatch(eventLoading(events));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoading = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogutAction = () => ({\r\n    type: types.eventLogout\r\n})","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogutAction } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n        dispatch(eventLogutAction())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name || 'logueese'}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> <br />\r\n            <p>{user.name}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModalAction = () => {\r\n    return {\r\n        type: types.uiOpenModal\r\n    }\r\n}\r\n\r\nexport const uiCloseModalAction = () => {\r\n    return {\r\n        type: types.uiCloseModal\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { eventClearActiveEventAction, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport { uiCloseModalAction } from '../../actions/ui';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [endDate, setEndDate] = useState(nowPlus1.toDate())\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formvalues, setFormvalues] = useState(initEvent);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const { notes, title, start, end } = formvalues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormvalues(activeEvent)\r\n        } else {\r\n            setFormvalues(initEvent)\r\n        }\r\n    }, [setFormvalues, activeEvent])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormvalues({\r\n            ...formvalues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        //TODO Cerrar el modal\r\n        dispatch(uiCloseModalAction())\r\n        dispatch(eventClearActiveEventAction())\r\n        setFormvalues(initEvent)\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e)\r\n        setFormvalues({\r\n            ...formvalues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e)\r\n        setFormvalues({\r\n            ...formvalues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error', 'fecha fin debe de ser mayor a fecha de inicio', 'error')\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            console.log(formvalues);\r\n            dispatch(eventStartUpdate(formvalues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formvalues))\r\n        }\r\n        //TODO realizar grabación\r\n\r\n        setTitleValid(true);\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModalAction } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch(uiOpenModalAction())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleOpenModal}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport 'moment/locale/es';\r\n\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModalAction } from '../../actions/ui';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { eventSetActiveAction, eventClearActiveEventAction, eventStartLoading } from '../../actions/events';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch()\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModalAction())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActiveAction(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEventAction())\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            diplay: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent &&\r\n                < DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthtenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (!isAuthtenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthtenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n} ","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthtenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthtenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthtenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n} ","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthtenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthtenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: '',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                events: [],\r\n                activeEvent: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducers } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}